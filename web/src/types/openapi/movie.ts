    /**
     * This file was auto-generated by openapi-typescript.
     * Do not make direct changes to the file.
     */

    export interface paths {
        "/movies/": {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** Get all movies */
            get: {
                parameters: {
                    query?: never;
                    header?: never;
                    path?: never;
                    cookie?: never;
                };
                requestBody?: never;
                responses: {
                    /** @description List of movies */
                    200: {
                        headers: {
                            [name: string]: unknown;
                        };
                        content: {
                            "application/json": components["schemas"]["MovieOutput"][];
                        };
                    };
                };
            };
            put?: never;
            /** Create a new movie */
            post: {
                parameters: {
                    query?: never;
                    header?: never;
                    path?: never;
                    cookie?: never;
                };
                requestBody: {
                    content: {
                        "multipart/form-data": components["schemas"]["CreateMovieInput"];
                    };
                };
                responses: {
                    /** @description Movie created successfully */
                    201: {
                        headers: {
                            [name: string]: unknown;
                        };
                        content: {
                            "application/json": components["schemas"]["MovieOutput"];
                        };
                    };
                    /** @description Bad request */
                    400: {
                        headers: {
                            [name: string]: unknown;
                        };
                        content?: never;
                    };
                };
            };
            delete?: never;
            options?: never;
            head?: never;
            patch?: never;
            trace?: never;
        };
        "/movies/{id}": {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            /** Get a movie by ID */
            get: {
                parameters: {
                    query?: never;
                    header?: never;
                    path: {
                        id: string;
                    };
                    cookie?: never;
                };
                requestBody?: never;
                responses: {
                    /** @description Movie found */
                    200: {
                        headers: {
                            [name: string]: unknown;
                        };
                        content: {
                            "application/json": components["schemas"]["MovieOutput"];
                        };
                    };
                    /** @description Movie not found */
                    404: {
                        headers: {
                            [name: string]: unknown;
                        };
                        content?: never;
                    };
                };
            };
            /** Update a movie by ID */
            put: {
                parameters: {
                    query?: never;
                    header?: never;
                    path: {
                        id: string;
                    };
                    cookie?: never;
                };
                requestBody: {
                    content: {
                        "multipart/form-data": components["schemas"]["UpdateMovieInput"];
                    };
                };
                responses: {
                    /** @description Movie updated successfully */
                    200: {
                        headers: {
                            [name: string]: unknown;
                        };
                        content: {
                            "application/json": components["schemas"]["MovieOutput"];
                        };
                    };
                    /** @description Bad request */
                    400: {
                        headers: {
                            [name: string]: unknown;
                        };
                        content?: never;
                    };
                    /** @description Movie not found */
                    404: {
                        headers: {
                            [name: string]: unknown;
                        };
                        content?: never;
                    };
                };
            };
            post?: never;
            /** Delete a movie by ID */
            delete: {
                parameters: {
                    query?: never;
                    header?: never;
                    path: {
                        id: string;
                    };
                    cookie?: never;
                };
                requestBody?: never;
                responses: {
                    /** @description Movie deleted successfully */
                    204: {
                        headers: {
                            [name: string]: unknown;
                        };
                        content?: never;
                    };
                    /** @description Movie not found */
                    404: {
                        headers: {
                            [name: string]: unknown;
                        };
                        content?: never;
                    };
                };
            };
            options?: never;
            head?: never;
            patch?: never;
            trace?: never;
        };
    }
    export type webhooks = Record<string, never>;
    export interface components {
        schemas: {
            CreateMovieInput: {
                title: string;
                director: string;
                description?: string;
                actorIDs?: string[];
                /** Format: binary */
                photo: string;
            };
            UpdateMovieInput: {
                title?: string;
                director?: string;
                description?: string;
                actorIDs?: string[];
                /** Format: binary */
                photo?: string;
            };
            MovieOutput: {
                /** Format: uuid */
                id?: string;
                title?: string;
                director?: string;
                description?: string;
                photoPath?: string;
                actorIDs?: string[];
            };
        };
        responses: never;
        parameters: never;
        requestBodies: never;
        headers: never;
        pathItems: never;
    }
    export type $defs = Record<string, never>;
    export type operations = Record<string, never>;
