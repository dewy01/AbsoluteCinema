openapi: 3.0.0
info:
  title: Cinema API
  version: 1.0.0

paths:
  /reservations/:
    post:
      summary: Create a new reservation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateReservationInput"
      responses:
        "201":
          description: Reservation created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReservationOutput"
        "400":
          description: Bad request

  /reservations/update/{id}:
    put:
      summary: Update an existing reservation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateReservationInput"
      responses:
        "200":
          description: Reservation updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReservationOutput"
        "400":
          description: Bad request
        "404":
          description: Reservation not found

  /reservations/user/{userID}:
    parameters:
      - name: userID
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: Get reservations by user ID
      responses:
        "200":
          description: List of reservations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReservationOutput"
        "404":
          description: User not found or no reservations

  /reservations/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid

    get:
      summary: Get a reservation by ID
      responses:
        "200":
          description: Reservation found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReservationOutput"
        "404":
          description: Reservation not found

    put:
      summary: Update reservation PDF path
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - pdfPath
              properties:
                pdfPath:
                  type: string
      responses:
        "200":
          description: PDF path updated successfully
        "400":
          description: Bad request
        "404":
          description: Reservation not found

    delete:
      summary: Delete a reservation by ID
      responses:
        "204":
          description: Reservation deleted successfully
        "404":
          description: Reservation not found

components:
  schemas:
    CreateReservationInput:
      type: object
      required:
        - screeningID
        - reservedSeats
      properties:
        screeningID:
          type: string
          format: uuid
        userID:
          type: string
          format: uuid
          nullable: true
        guestName:
          type: string
        guestEmail:
          type: string
          format: email
        reservedSeats:
          type: array
          items:
            $ref: "#/components/schemas/ReservedSeatInput"

    UpdateReservationInput:
      type: object
      required:
        - guestName
        - guestEmail
        - reservedSeats
      properties:
        userID:
          type: string
          format: uuid
          nullable: true
        guestName:
          type: string
        guestEmail:
          type: string
          format: email
        reservedSeats:
          type: array
          items:
            $ref: "#/components/schemas/ReservedSeatInput"

    ReservedSeatInput:
      type: object
      required:
        - seatID
      properties:
        seatID:
          type: string
          format: uuid

    ReservationOutput:
      type: object
      properties:
        id:
          type: string
          format: uuid
        screeningID:
          type: string
          format: uuid
        userID:
          type: string
          format: uuid
          nullable: true
        guestName:
          type: string
        guestEmail:
          type: string
          format: email
        pdfPath:
          type: string
        reservedSeats:
          type: array
          items:
            $ref: "#/components/schemas/ReservedSeatOutput"

    ReservedSeatOutput:
      type: object
      properties:
        id:
          type: string
          format: uuid
        seatID:
          type: string
          format: uuid
