openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
paths:
  /users/list:
    get:
      summary: List users
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"

  /users/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserInput"
      responses:
        "201":
          description: User created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserOutput"
        "400":
          description: Bad request

  /users/login:
    post:
      summary: Log in an existing user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginUserInput"
      responses:
        "200":
          description: Authenticated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "401":
          description: Unauthorized

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          x-go-type: googleuuid.UUID
          x-go-type-import:
            path: github.com/google/uuid
            name: googleuuid
        name:
          type: string
        email:
          type: string

    CreateUserInput:
      type: object
      required:
        - name
        - email
        - password
        - confirmPassword
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
          format: password
        confirmPassword:
          type: string
          format: password

    LoginUserInput:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
          format: password

    UserOutput:
      type: object
      properties:
        id:
          type: string
          format: uuid
          x-go-type: googleuuid.UUID
          x-go-type-import:
            path: github.com/google/uuid
            name: googleuuid
        name:
          type: string
        email:
          type: string
        role:
          type: string

    LoginResponse:
      type: object
      properties:
        token:
          type: string
